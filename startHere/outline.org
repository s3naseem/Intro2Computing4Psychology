# -*- org-link-file-path-type: relative; -*-
#+Title: Outline
#+Author: Britt Anderson

* Overview
  This file contains a list of topics and associated activities for teaching yourself how to use your computer for research. Below you will find a list of topics with links to the relevant files in the other directories in this repository. The most convenient way to navigate the links may be to fork this repository and then clone it to your own computer and work from there. The ordering below is used in my course at the University of Waterloo, but you are encouraged to depart from that structure and navigate your own path as your needs and interests dictate. Most of the topics are reasonably self-contained, but of course, some of the later topics may require earlier skills or make reference to earlier activities. 
** Videos
   https://vimeo.com/channels/i2c4p/448900968
* RStudio
** Rstudio on Windows and OSX
   This is a way to get started with some elements of programming without the need to wait for you to install Linux. It is a good starting point for learning about the tools and conventions useful in coding, especially for statistical applications.
   For this beginning effort we will:
   1. Download R
   2. Download RStudio
   3. Verify they are working
   4. Generate a simple Rmd file to see some of the basic components of the markdown syntax
   5. Add some simple computing constructs including a 
      - variable
      - for loop
      - function
   6. Produce an Rmd file from the above
   7. And export it to an html file that we can open in a web browser and that displays correctly. 
   For the detailed instructions on the above steps consult [[file:../topics/rStudioWinMacFirstSteps.org][the first
   steps Rstudio file in the topics directory.]]
*** Warning
    Don't try to use R in Linux until until you have a working
    installation of Ubuntu (or alternative linux) working on your
    computer. This will be handled below. This topic here is intended
    to start your R programming via a graphical inteface. After
    familiarizing yourself with the basic features of the R language
    and using a markdown dialect for mixing text and code we will
    explore other editors for this function. Later modules will focus
    in more detail on analysis and visualization.
** Files
    1. [[file:../topics/rStudioWinMacFirstSteps.org][rStudioWinMacFirstSteps.org]]   
    2. [[file:../assessments/rStudioInstallationWinMacAssessment.org][R Studio Installation Assessment]]
    3. [[file:../assessments/firstRmdAssessment.org][Rmd to HTML Assessment]]
** Videos
   1. [[https://vimeo.com/450563454][Getting Started with RStudio]]
   2. [[https://vimeo.com/450719112][Download R]]
   3. [[https://vimeo.com/450719047][Downloading RStudio (Windows)]]
   4. [[https://vimeo.com/450719009][RStudio Walk-through]]
   5. [[https://vimeo.com/450718879][Demonstrating the Power of RMarkdown]]
* Github Accounts and Forking Repositories
  We will be studying version control later when we have set up our Ubuntu installation and can use the terminal (aka: command line). To prepare for that we will create a [[https://github.com][Github account]] and gain some basic familiarity with the Github workflow. 
  1. Intro to Github
     =git= is a program that allows you to do version control. /Github/ is one of the larger social coding platform: an online agora for sharing, finding, and collaborating. It uses =git= as its base version control program, but it does other things too. Start to learn a bit about /Github/ here.
  2. Github signup and walkthrough
     To participate at Github you have to be a member. It is free. Once you have done so, /fork/ this repository.
** Files
   1. [[file:../topics/githubIDBasics.org][Github Topic File]]
   2. [[file:../assessments/githubIDAssessment.org][Github ID Assessment]]
** Videos
   1. [[https://vimeo.com/450563119][Github Introduction]]
   2. [[https://vimeo.com/450563176][Github Signup]]
* Linux Basics
** Installing Linux to Your Own Computer
   In this topic you will install a version of Linux on your own machine to use throughout this course (and after, I hope). 
*** Run from a USB (or SD card or external hard drive)
    As I assume most new users will be hesitant to try and install a second operating system on their personal laptop they use for school and their personal work I am highlighting the use of Linux (Xubuntu) on a USB. You use the USB as your hard disk. You still use you computer's hardware (screen, keyboard, camera, etc), but the reading and writing of data takes place on the USB. It makes things slower, but you don't change your personal set up. Shut down. Remove USB. Start back up and you are back to where you are used to. It is a reasonable way to get started for experimenting and learning, but not an ideal way to run a system long-term. Consider converting to a more flexible and faster option in the future. Details of all the steps you have to take, and there are many, can be found in the [[file:../topics/installUbuntu.org][topics file]]. 
*** Install Xubuntu to a USB Topic
    [[file:../topics/installUbuntu.org][installUbuntu.org]]
*** Dual Booting
    [[file:../topics/installUbuntu.org::*Dual Boot][Dual Boot]]
*** Linux Only
    [[file:../topics/installUbuntu.org::*Linux only][linux only]]
** Xubuntu Walkthrough
   [[https://vimeo.com/channels/i2c4p/453034310][Explaining your first Xubuntu Boot (video)]]
   [[https://vimeo.com/channels/i2c4p/453295883][First Boot Housekeeping Steps (video)]]
** Package Management
   [[https://vimeo.com/channels/i2c4p/453295879][Installing your first package (emacs) (video)]]
** Files
   1. [[file:../topics/installUbuntu.org][Installing Ubuntu Instructions]]
   2. [[file:../assessments/installXubuntuAssessment.org][Xubuntu Installation Assessment]]
** Videos
   1. [[https://vimeo.com/448906706][Intro to Booting Linux]]
   2. [[https://vimeo.com/448908272][How To Get To Your Boot Menu]]
   3. [[https://vimeo.com/448908305][Booting Your Computer From a USB]]
   4. [[https://vimeo.com/448908514][A Persistent USB ISO]]
   5. [[https://vimeo.com/448908150][Downloading the Rufus Tool]]
   6. [[https://vimeo.com/448908073][Getting the Xubuntu ISO]]
   7. [[https://vimeo.com/448908151][Installing Xubuntu to the USB]]
   8. [[https://vimeo.com/453034310][Explaining Your First USB Boot]]
   9. [[https://vimeo.com/453295883][What To Do After Your First Linux Boot]]
   10. [[https://vimeo.com/453295879][Installing Your First Package]]
*** Lower Resolution Screen Grabs (some redundancy to the above)
    1. [[https://vimeo.com/449006223][A Successful First Boot]]
    2. [[https://vimeo.com/453049176][USB Boot Version 2]]
    3. [[https://vimeo.com/453075287][Testing Persistence]]
    4. [[https://vimeo.com/453075670][First Shutdown]]
    5. [[https://vimeo.com/453049139][Sudo Apt Update]]
    6. [[https://vimeo.com/453075607][Sudo Apt Upgrade]]
* Terminal (aka the Command Line)
  In this first look at the terminal (command line) I make a brief survey and show some common commands. 
  The terminal is a text based interface to your computer. It can greatly simplify many common tasks and allow you to easily automate many mundane computational procedures. 
** Files
   1. [[file:../topics/intro2TheTerminal.org][Introduction to the Terminal]]
   2. [[file:../assessments/terminal.org][Terminal Assessment]]
** Videos
   1. [[https://vimeo.com/453837330][An Introduction to the Terminal]]
   2. [[https://vimeo.com/453837142][Terminal Games]]
   3. [[https://vimeo.com/453837048][Terminal Assessment]]
* Emacs 
  Emacs is a text editor that has been developed for fifty years. In addition to being a tool for writing it is also excellent for coding, programming, visualizing graphics and combining these into a single document that can easily be exported to web pages and pdf. Here we get a first glimpse of the program itself, some of its operational quirks, and a bit of show and tell of its power. Much of this power in contemporary emacs comes from orgmode, a mode that lets you do everything from making notes in outline to organizing your appointments and contacts. 
** Files
   1. [[file:../topics/emacs.org][Emacs]]
   2. [[file:../assessments/emacsBeginningAssessment.org][Beginning Emacs Assessment]]
** Videos
   1. [[https://vimeo.com/455641662][Emacs Show and Tell]]
   2. [[https://vimeo.com/455628993#t=942s][Beginning With Emacs]]
* Version Control
  Version control is a highly versatile and powerful to way to track changes, un-do them, and coordinate all this across multiple users in multiple locations. Here I introduce one particular program for version control, and a popular cloud platform designed to work with it. 
** Git
   Git is a program for version control, but there are others. Some of these are presented in the [[file:../topics/githubPullRequest.org][github pull request topic.]] There are also tools for working with and sharing git repositories. The most famous is github. 
** Github
   A large social coding site there are particular terms of art for git and github that are important to work with this 
** Github Basics
   To work through the assessment for issues and pull requests you will have first need to complete creating a github account and forking respositories ([[*Github][see above]])
** Files
   1. [[file:../topics/githubPullRequest.org][Some Background On Git and Pull Requests]]
   2. [[file:../assessments/githubPullRequestAssmnt.org][The Pull Request Assessment]]
** Videos
   1. [[https://vimeo.com/456349826][An Introduction to Version Control]]
   2. [[https://vimeo.com/456349738][Making a Pull Request Part 1]]
   3. [[https://vimeo.com/456349595][A Pull Request Illustrated]]
   4. [[https://vimeo.com/456349697][Github Enabled Tools]]
   5. [[https://vimeo.com/456349516][The Github Pull Request Assessment Reviewed]]
* Beginning Programming (with Python as an example)
  What is programming, and what are some of the basics of approach and terminology? Using python as a en example basic concepts such as variables, loops, indexing and assignments are illustrated. We will also begin to examine how we can mix code with text in Emacs in preparing to generate reproducible research reports that mix code, data, text, and references. Our tool for that is called org babel.
** Files
   1. [[file:../topics/beginningPython.org][Beginning Python]]
*** Assessments
    1. [[file:../assessments/forLoopPythonAssessment.org][For loop in python]].
    2. [[file:../assessments/hangmanPython.org][Hangman Python]]
** Videos
*** Topics
    1. [[https://vimeo.com/458286292][An intro]] to what is programming?
    2. [[https://vimeo.com/458286273][What to think about]] _before_ you program.
    3. [[https://vimeo.com/458285882][Org-babel]]: blending text and code in Emacs ( a longer one)
    4. [[https://vimeo.com/458286198][Programming concepts]] and terminology.
*** Assessments
    1. [[https://vimeo.com/458286064][Hints and advice]] for completing "For loop in python" and  "Hangman in Python"
* R
** Getting R/Rstudio for Linux
** Repeating the Rmd exercises in Linux
** Repeating Python exercises in R
** Files
   1. [[file:../topics/installingR.org][Installing R]]
   2. [[file:../topics/beginningR.org][Beginning R]]
   3. [[file:../assessments/accessingDatainRAssessment.org][Accessing Data in R (assessment)]]
   4. [[file:../assessments/hangmanRAssessment.org][Hangman in R (assessment)]]
** Videos
   1. [[https://vimeo.com/460263215][Introduction to this Module]]
   2. [[https://vimeo.com/460262566][Installing R/Rstudio on Linux (Xubuntu]])
   3. [[https://vimeo.com/460262930][Beginning R Walkthrough]]
   4. [[https://vimeo.com/460262936][Assessment Comments]]
* Data Handling
** Working with Data Python
*** Files
    1. Topic: [[file:../topics/pythonData.org][Beginning Pandas]]
    2. Assessment: [[file:../assessments/dataPandasAssessment.org][Pandas Assessment]]
*** Videos
    1. [[https://vimeo.com/462705773][Intro to the Module]]
    2. [[https://vimeo.com/462705737][Installing Pandas]]
    3. [[https://vimeo.com/462705724][Requesting Data with Python]]
    4. [[https://vimeo.com/462705656][Unzipping Data with Python]]
    5. [[https://vimeo.com/462705437][Reading in a CSV File with Pandas/Python]]
    6. [[https://vimeo.com/462706049][Installing an Emacs Package to Improve Python]] Coding.
* Basic Plotting
** Plotting in R: A tale of two approachs
   R has two main contenders in the plotting domain: base and ggplot. This topic takes a look at both. 
** Plotting in Python: An evolving experience
   Plotting in python has come along way. The workhorse library is matplotlib. This library is demonstrated for making an interaction plot. 
** A slight digression on Jupyter Notebooks  (Planned)
*** Files
    1. [[file:../topics/plottingRandPy.org][Plotting in R and Python]] (topic)
    2. [[file:../assessments/plottingRandPyAssessment.org][Plotting in R and Python]] (assessment)
*** Videos
    1. [[https://vimeo.com/463525019][Intro to Plotting in R and Python]]
    2. [[https://vimeo.com/463524914][First Steps with Base Plot in R]]
    3. [[https://vimeo.com/463524870][Changing the Appearance of a Base R Plot]]
    4. [[https://vimeo.com/463524796][Using GGPlot to Plot in R]]
    5. [[https://vimeo.com/463524647][Python Plotting with Matplotlib]]
* Report Writing
  To be able to produce a reproducible research report you need to be able to write and blend code, text, analysis, graphics, and references. In this topic we will use Emacs, orgmode, and Babel with help from LaTeX and R to demonstrate the use of all these features
** Org, markdown, and related dialects and tools
** LaTeX
** Reference Management
*** Biblatex (Bibtex)
** Mixing Code and Text
** Files
   1. [[file:../topics/reportWriting.org][Report Writing]] (topic)
   2. [[file:../assessments/reportGenAssessment.org][Report Writing]] (assessment)
   3. [[file:../codeExamples/reportGen/][Report Generation Practice Files]] (directory)
** Videos
   1. [[https://vimeo.com/465412304][Introduction to Report Writing Topic]]
   2. [[https://vimeo.com/465412227][What Is a Reproducible Research Report?]]
   3. [[https://vimeo.com/465412148][What is LaTeX (and how do I get it)?]]
   4. [[https://vimeo.com/465411974][Getting PdfTools for Emacs]]
   5. [[https://vimeo.com/465411965][Demonstrating Report Writing (Basics)]]
   6. [[https://vimeo.com/465411872][Demonstrating Report Writing (code and graphics)]]
   7.  [[https://vimeo.com/465411716][Demonstrating Report Writing (citations/references)]]
* Programming Psychology Experiments
** Many tools. Many Choices.
** Which language should you use?
   - Matlab and PsychToolbox
   - Javascript and JSPsych
   - Python and PsychoPy - recommended
     - How to install it
     - How to use it (Posner Demo)
*** Files
    1. [[file:../topics/installTestPsychopy.org][Programming Experiments & Installing and Testing Psychopy]] (topic file)
    2. [[file:../assessments/psychopyAssessment.org][Coding the Posner Task]] (assessment file)
*** Videos
    1. [[https://vimeo.com/469970965][Intro to Coding Experiments]]
    2. [[https://vimeo.com/469970967][Which Language to Use?]]
    3. [[ https://vimeo.com/460262765][Installing and Testing Psychopy]]
    4. [[https://vimeo.com/469968313][Posner Demo Assessment Introduction]]
* Presentations (Extra WIP)
** From Text File to Slideshow
*** org-tree-slide
*** beamer
*** reveal-js
*** And many more. 
** Files
** Videos
* Final Projects
  Making a reproducible report. Putting it altogether.
  Detailed instructions can be found [[file:../assessments/finalProjectAssessment.org][here]].
